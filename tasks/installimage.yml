---

- name: copy public key into tempfile
  shell: /usr/bin/tail -1 /root/.ssh/authorized_keys > tmpKey

- name: copy autosetup configuration file
  template:
    src: installimage.j2
    dest: /autosetup
    owner: root
    group: root
    mode: 0644

- name: run installimage
  command: /root/.oldroot/nfs/install/installimage -K /root/tmpKey
  register: result

- name: reboot server
  command: reboot
  async: 0
  poll: 0
  ignore_errors: true

- name: remove server from local known_hosts file
  local_action: shell ssh-keygen -R {{ ansible_host }}

- name: pause a bit for the reboot to kick in
  pause: seconds=60

- name: waiting for server to come back
  local_action: wait_for
    host={{ ansible_host }}
    port=22
    delay=1
    timeout={{ hetzner_installimage_after_reboot_timeout }}

- name: do facts module to get latest information
  setup:

- name: update apt
  raw: apt-get update
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install python on remote host
  package: name=python state=present

- name: generate hostcode
  set_fact:
    _hostcode: "{{ ansible_host | md5 }}"

- name: create hostcode file
  template:
    src: hostcode.j2
    dest: /etc/hostcode
    owner: root
    group: root
    mode: 0644

- name: set the server_name
  local_action: uri
    url=https://robot-ws.your-server.de/server/{{ ansible_host }}
    method=POST
    user={{ hetzner_installimage_webservice_username }}
    password={{ hetzner_installimage_webservice_password }}
    force_basic_auth=yes
    body='server_name={{ hetzner_server_name }}'
    status_code=200
  register: hetzner_installimage_rescue
  when: hetzner_server_name is defined

...
